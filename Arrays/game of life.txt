class Solution {
public:
    int countngbr(int i, int j, vector<vector<int>>& board,int n, int m){
        int count = 0;
        if(i-1 >= 0 && j-1>=0 && board[i-1][j-1] == 1) count++;
        if(i-1 >= 0 && board[i-1][j] == 1) count++;
        if(i-1 >= 0 && j+1<m && board[i-1][j+1] == 1) count++;
        if(j+1 < m && board[i][j+1] == 1) count++;
        if(i+1 < n && j+1 < m && board[i+1][j+1] == 1) count++;
        if(i+1 < n && board[i+1][j] == 1) count++;
        if(i+1 < n && j-1>=0 && board[i+1][j-1] == 1) count++;
        if(j-1>=0 && board[i][j-1] == 1) count++;

        return count;
    }
    void gameOfLife(vector<vector<int>>& board) {
        vector<vector<int>> temp = board;
        int n = board.size();
        int m = board[0].size();
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                int count = countngbr(i,j,board,n,m);
                if(count<2 && board[i][j]==1){
                    temp[i][j] = 0;
                }
                if((count==2||count==3) && board[i][j]==1){
                    continue;
                }
                if(count>3 && board[i][j]==1){
                    temp[i][j] = 0;
                }
                if(count==3 && board[i][j]==0){
                    temp[i][j] = 1;
                }
            }
        }
        board = temp;
    }
};