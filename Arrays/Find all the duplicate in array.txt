class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        unordered_map<int, int> mp;
        for(int i=0;i<nums.size() ; i++){
            mp[nums[i]]++;
        }
        vector<int> ans;
        for(auto it : mp){
            if(it.second >= 2){
                ans.push_back(it.first);
            }
        }
        return ans;
    }
};
// Can not find the appropriate solution for solving with constant space and O(n) time comp.
// cyclic sort might help, need to learn it.
