class Solution {
public:
    int solve(vector<int>& prices,int ind, int buy, vector<vector<int>>& dp){
        //base case
        if(ind == prices.size()){
            return 0;
        }
        if(dp[ind][buy] != -1) return dp[ind][buy];

        int profit =0;
        if(buy){
            profit = max( (-prices[ind] + solve(prices, ind+1, 0, dp)) , solve(prices, ind+1, 1, dp));
        }
        else{
            profit = max( (prices[ind] + solve(prices, ind+1, 1, dp)) , solve(prices, ind+1, 0, dp));
        }

        return dp[ind][buy] = profit;
    }
    int maxProfit(vector<int>& prices) {
        vector<vector<int>> dp(prices.size()+1 , vector<int> (2, -1));
        return solve(prices,0, 1, dp);
    }
};
//2d dp