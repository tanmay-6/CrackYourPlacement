class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        int k=m+n-1;
        int i=m-1;
        int j=n-1;
        while(j>=0){
            if(i>=0 && nums1[i]>nums2[j]){
                nums1[k] = nums1[i];
                k--;
                i--;
            }
            else{
                nums1[k]=nums2[j];
                k--;
                j--;
            }
        }
    }
};
/* another solution using extra memory
class Solution {
public:
    void merge(vector<int>& num1, int m, vector<int>& num2, int n) {
        int i=0;
        int j=0;
        vector<int> ans; //using extra memory
        while(i<m && j<n){
            if(num1[i]<=num2[j]){
                ans.push_back(num1[i]);
                i++;
            }
            else{
                ans.push_back(num2[j]);
                j++;
            }
        }
        while(i<m){
            ans.push_back(num1[i]);
            i++;
        }
        while(j<n){
            ans.push_back(num2[j]);
            j++;
        }
        num1 = ans;
    }
};
*/